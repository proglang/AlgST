protocol Beqw =
  | Fadi -(forall (xw:SL). (forall (zf:TL). Char)) Beqw -(forall (xw:TL). ())
  | Gizs

protocol Ceuw =
  | Mouq (String -o ((Int -> ()) -> (forall (xy:SL). Char)))
  | Koqk

protocol Gilv =
  | Hoee -(Char -o (forall (yo:TL). (forall (zx:SL). yo)))
  | Duff
  | Cucu (() -> Int)

type T1a = (dual (? Beqw . (! Beqw . (! Char . (! (Char -> ()) . End?)))))
type T1b = (! Beqw . (? Beqw . (? Char . (? (Char -> ()) . (dual End?)))))

eq1a : T1a -> T1b
eq1a x = x
eq1b : T1b -> T1a
eq1b x = x

{-# BENCHMARK "1/12" T1a T1b #-}

type T2a = (! Ceuw . (? String . (? (? Char . (? (Int -> Char) . End!)) . End!)))
type T2b = (! Ceuw . (? String . (? (? Char . (? (Int -> Char) . (dual (dual End!)))) . (dual (dual End!)))))

eq2a : T2a -> T2b
eq2a x = x
eq2b : T2b -> T2a
eq2b x = x

{-# BENCHMARK "2/13" T2a T2b #-}

type T3a = (! ((forall (zo:TU). zo) -> Int) . (? Gilv . (dual (? (() -> String) . (! Gilv . End?)))))
type T3b = (! ((forall (zo:TU). zo) -> Int) . (? Gilv . (! (() -> String) . (? Gilv . (dual End?)))))

eq3a : T3a -> T3b
eq3a x = x
eq3b : T3b -> T3a
eq3b x = x

{-# BENCHMARK "3/15" T3a T3b #-}

type T4a = (dual (! ((String -o (dual (? Int . End!))) -> String) . (? () . (dual (! () . End!)))))
type T4b = (? ((String -o (! Int . (dual End!))) -> String) . (! () . (dual (? () . (dual End!)))))

eq4a : T4a -> T4b
eq4a x = x
eq4b : T4b -> T4a
eq4b x = x

{-# BENCHMARK "4/16" T4a T4b #-}

type T5a = (! Beqw . (? ((forall (zg:TL). (forall (zr:TL). ((? Beqw . End!) -> zg))) -o (dual (? String . End?))) . End?))
type T5b = (! Beqw . (? ((forall (zx:TL). (forall (xb:TL). ((? Beqw . (dual (dual End!))) -> zx))) -o (! String . (dual End?))) . (dual (dual End?))))

eq5a : T5a -> T5b
eq5a x = x
eq5b : T5b -> T5a
eq5b x = x

{-# BENCHMARK "5/16" T5a T5b #-}

type T6a = (? (! Gilv . (dual (? Beqw . End?))) . (! ((dual (? () . (! Int . End?))) -o Char) . (? Ceuw . (? String . End?))))
type T6b = (? (! Gilv . (dual (? Beqw . (dual (dual End?))))) . (dual (? ((! () . (dual (! Int . (dual (dual End?))))) -o Char) . (! Ceuw . (! String . (dual End?))))))

eq6a : T6a -> T6b
eq6a x = x
eq6b : T6b -> T6a
eq6b x = x

{-# BENCHMARK "6/21" T6a T6b #-}

type T7a = (dual (? Int . (dual (? (forall (yu:TU). (forall (zr:SL). (zr -> (forall (ze:SL). (forall (xu:TU). (forall (ya:TU). String)))))) . (? Ceuw . (? Beqw . (dual (! Ceuw . End!))))))))
type T7b = (! Int . (? (forall (xd:TU). (forall (yj:SL). (yj -> (forall (yf:SL). (forall (xz:TU). (forall (xm:TU). String)))))) . (dual (! Ceuw . (dual (? Beqw . (? Ceuw . (dual End!))))))))

eq7a : T7a -> T7b
eq7a x = x
eq7b : T7b -> T7a
eq7b x = x

{-# BENCHMARK "7/21" T7a T7b #-}

type T8a = (? Ceuw . (? (forall (yz:SL). yz) . (! Char . (? Gilv . (dual (! ((forall (zi:TU). (forall (xk:SL). zi)) -o String) . (? Beqw . (! Ceuw . End?))))))))
type T8b = (? Ceuw . (? (forall (xv:SL). xv) . (dual (? Char . (! Gilv . (dual (? ((forall (zi:TU). (forall (zq:SL). zi)) -o String) . (dual (? Beqw . (dual (? Ceuw . (dual End?))))))))))))

eq8a : T8a -> T8b
eq8a x = x
eq8b : T8b -> T8a
eq8b x = x

{-# BENCHMARK "8/21" T8a T8b #-}

type T9a = (? String . (? Char . (? () . (dual (? Gilv . (dual (! Beqw . (? Ceuw . (dual (! Gilv . (! (() -o ()) . End?)))))))))))
type T9b = (? String . (? Char . (? () . (! Gilv . (dual (? Beqw . (! Ceuw . (dual (? Gilv . (? (() -o ()) . (dual End?)))))))))))

eq9a : T9a -> T9b
eq9a x = x
eq9b : T9b -> T9a
eq9b x = x

{-# BENCHMARK "9/22" T9a T9b #-}

type T10a = (? Gilv . (! Char . (dual (! Beqw . (! Ceuw . (! (() -> Int) . (! Char . (dual (! (! Int . (! Int . End?)) . End!)))))))))
type T10b = (? Gilv . (! Char . (? Beqw . (? Ceuw . (? (() -> Int) . (dual (! Char . (dual (! (! Int . (dual (? Int . (dual End?)))) . (dual (dual End!)))))))))))

eq10a : T10a -> T10b
eq10a x = x
eq10b : T10b -> T10a
eq10b x = x

{-# BENCHMARK "10/23" T10a T10b #-}

type T11a = (dual (? (forall (xg:TL). (xg -o (((forall (xp:TL). (forall (yw:TU). ())) -o (String -o (! (forall (xn:TL). xn) . (? (dual (! Beqw . End?)) . (! Gilv . (? Ceuw . End?)))))) -> Char))) . End!))
type T11b = (! (forall (yn:TL). (yn -o (((forall (zj:TL). (forall (xp:TU). ())) -o (String -o (! (forall (ys:TL). ys) . (dual (! (? Beqw . (dual End?)) . (dual (! Gilv . (? Ceuw . End?)))))))) -> Char))) . (dual End!))

eq11a : T11a -> T11b
eq11a x = x
eq11b : T11b -> T11a
eq11b x = x

{-# BENCHMARK "11/27" T11a T11b #-}

type T12a = (? Ceuw . (? Ceuw . (! (forall (yl:TU). String) . (dual (! String . (! Gilv . (? Gilv . (? Ceuw . (? Int . (! (() -o String) . (! String . (! Ceuw . (? Ceuw . End?)))))))))))))
type T12b = (? Ceuw . (? Ceuw . (dual (? (forall (xj:TU). String) . (! String . (dual (? Gilv . (dual (? Gilv . (? Ceuw . (? Int . (! (() -o String) . (! String . (! Ceuw . (dual (! Ceuw . (dual End?)))))))))))))))))

eq12a : T12a -> T12b
eq12a x = x
eq12b : T12b -> T12a
eq12b x = x

{-# BENCHMARK "12/29" T12a T12b #-}

type T13a = (! (? Gilv . (! () . (! ((Int -> Char) -o ()) . (! () . (! () . (! Gilv . (dual (? (? Ceuw . (! Gilv . (! String . (? Char . End!)))) . End?)))))))) . End?)
type T13b = (! (? Gilv . (! () . (! ((Int -> Char) -o ()) . (! () . (dual (? () . (dual (! Gilv . (! (? Ceuw . (! Gilv . (! String . (dual (! Char . (dual End!)))))) . (dual End?)))))))))) . End?)

eq13a : T13a -> T13b
eq13a x = x
eq13b : T13b -> T13a
eq13b x = x

{-# BENCHMARK "13/30" T13a T13b #-}

type T14a = (? ((String -o Char) -o ()) . (? (? String . (! Ceuw . (? Gilv . End!))) . (dual (? ((forall (xz:TL). (() -o ((? (forall (yk:TU). String) . (dual (? Ceuw . End!))) -> ()))) -o ()) . (! Beqw . End!)))))
type T14b = (? ((String -o Char) -o ()) . (? (? String . (dual (? Ceuw . (! Gilv . (dual End!))))) . (! ((forall (yv:TL). (() -o ((? (forall (ym:TU). String) . (! Ceuw . (dual End!))) -> ()))) -o ()) . (dual (! Beqw . (dual (dual End!)))))))

eq14a : T14a -> T14b
eq14a x = x
eq14b : T14b -> T14a
eq14b x = x

{-# BENCHMARK "14/33" T14a T14b #-}

type T15a = (! (() -o (dual (! Char . (! Beqw . End!)))) . (! Gilv . (? Ceuw . (dual (? Ceuw . (! Ceuw . (? (Char -> (() -> Char)) . (? (Int -o (String -> (forall (zh:TL). (Int -o Char)))) . End!))))))))
type T15b = (! (() -o (? Char . (dual (! Beqw . (dual (dual End!)))))) . (! Gilv . (dual (! Ceuw . (dual (! Ceuw . (dual (! Ceuw . (? (Char -> (() -> Char)) . (dual (! (Int -o (String -> (forall (xj:TL). (Int -o Char)))) . (dual End!))))))))))))

eq15a : T15a -> T15b
eq15a x = x
eq15b : T15b -> T15a
eq15b x = x

{-# BENCHMARK "15/34" T15a T15b #-}

type T16a = (! (dual (! () . (! Char . End!))) . (! Beqw . (dual (! (? Char . (! Beqw . (dual (? (! (! Char . (! Gilv . End!)) . End!) . (? Int . End?))))) . (dual (? Ceuw . (? String . (! Ceuw . End?))))))))
type T16b = (! (? () . (dual (! Char . (dual (dual End!))))) . (! Beqw . (? (? Char . (dual (? Beqw . (? (! (! Char . (dual (? Gilv . (dual End!)))) . (dual (dual End!))) . (? Int . (dual (dual End?))))))) . (dual (! Ceuw . (! String . (dual (! Ceuw . End?))))))))

eq16a : T16a -> T16b
eq16a x = x
eq16b : T16b -> T16a
eq16b x = x

{-# BENCHMARK "16/35" T16a T16b #-}

type T17a = (? Gilv . (dual (? (() -> (forall (xt:SL). (dual (? (() -o xt) . (! (forall (xn:TU). xn) . (! () . (! Gilv . (? Int . End?)))))))) . (? Char . (! Beqw . (? String . (! Ceuw . (? (forall (yg:TU). ()) . (? String . End?)))))))))
type T17b = (? Gilv . (dual (? (() -> (forall (yq:SL). (! (() -o yq) . (? (forall (yg:TU). yg) . (? () . (? Gilv . (! Int . (dual End?)))))))) . (? Char . (dual (? Beqw . (dual (? String . (dual (? Ceuw . (dual (? (forall (yn:TU). ()) . (? String . End?)))))))))))))

eq17a : T17a -> T17b
eq17a x = x
eq17b : T17b -> T17a
eq17b x = x

{-# BENCHMARK "17/36" T17a T17b #-}

type T18a = (! (() -> ()) . (? Gilv . (dual (! Beqw . (? String . (! Char . (dual (! Ceuw . (? String . (dual (! (Int -> (() -> ())) . (? Int . (? (Char -o ()) . (? Ceuw . (? Beqw . End?)))))))))))))))
type T18b = (! (() -> ()) . (dual (! Gilv . (dual (? Beqw . (dual (? String . (! Char . (? Ceuw . (! String . (! (Int -> (() -> ())) . (dual (! Int . (! (Char -o ()) . (! Ceuw . (dual (? Beqw . End?)))))))))))))))))

eq18a : T18a -> T18b
eq18a x = x
eq18b : T18b -> T18a
eq18b x = x

{-# BENCHMARK "18/36" T18a T18b #-}

type T19a = (dual (! (! Gilv . (! (Char -o (! () . (! Gilv . End!))) . (! Char . (? Beqw . (dual (! (String -> Int) . (! String . (! (Int -> (forall (xa:TU). String)) . End?)))))))) . (! (Char -o (forall (zw:SL). ())) . (! Beqw . End?))))
type T19b = (? (! Gilv . (! (Char -o (! () . (dual (? Gilv . (dual End!))))) . (! Char . (dual (! Beqw . (! (String -> Int) . (! String . (! (Int -> (forall (zr:TU). String)) . (dual (dual End?)))))))))) . (dual (! (Char -o (forall (yg:SL). ())) . (! Beqw . (dual (dual End?))))))

eq19a : T19a -> T19b
eq19a x = x
eq19b : T19b -> T19a
eq19b x = x

{-# BENCHMARK "19/37" T19a T19b #-}

type T20a = (! String . (dual (? String . (? (dual (! String . End!)) . (dual (? Int . (? Ceuw . (? () . (! (Char -> String) . (! Gilv . (? ((Int -> ()) -o (dual (? (forall (zd:SL). Char) . End!))) . (? Int . (? Beqw . (? Gilv . End?))))))))))))))
type T20b = (! String . (! String . (! (? String . (dual End!)) . (? Int . (? Ceuw . (? () . (dual (? (Char -> String) . (? Gilv . (dual (? ((Int -> ()) -o (! (forall (yr:SL). Char) . (dual End!))) . (? Int . (? Beqw . (? Gilv . (dual (dual End?))))))))))))))))

eq20a : T20a -> T20b
eq20a x = x
eq20b : T20b -> T20a
eq20b x = x

{-# BENCHMARK "20/40" T20a T20b #-}

type T21a = (? (Int -o (Char -> ())) . (dual (? (forall (yk:SL). (? Beqw . End?)) . (! (? ((forall (xw:TL). Char) -> (() -o Int)) . (! (forall (zq:TU). ((zq -o zq) -> ())) . End!)) . (? Gilv . (? (forall (zp:TL). (zp -> (() -> (zp -> ((forall (xz:TL). Int) -> String))))) . (! (forall (zo:TL). String) . End?)))))))
type T21b = (? (Int -o (Char -> ())) . (dual (? (forall (yb:SL). (? Beqw . End?)) . (! (? ((forall (yt:TL). Char) -> (() -o Int)) . (! (forall (ym:TU). ((ym -o ym) -> ())) . End!)) . (dual (! Gilv . (! (forall (yl:TL). (yl -> (() -> (yl -> ((forall (xl:TL). Int) -> String))))) . (dual (! (forall (yj:TL). String) . End?)))))))))

eq21a : T21a -> T21b
eq21a x = x
eq21b : T21b -> T21a
eq21b x = x

{-# BENCHMARK "21/46" T21a T21b #-}

type T22a = (dual (? Beqw . (dual (? (? (forall (xy:TU). ()) . (! Beqw . (? String . (! Char . End?)))) . (! Gilv . (? Gilv . (! () . (! Beqw . (? Char . (? Gilv . (? () . (dual (! Int . (? () . (? Ceuw . (? String . (! Int . (? Ceuw . (! String . (! Int . End?))))))))))))))))))))
type T22b = (! Beqw . (dual (! (? (forall (zg:TU). ()) . (dual (? Beqw . (! String . (? Char . (dual End?)))))) . (dual (! Gilv . (? Gilv . (! () . (dual (? Beqw . (dual (? Char . (? Gilv . (? () . (? Int . (dual (? () . (dual (! Ceuw . (! String . (dual (! Int . (? Ceuw . (dual (? String . (dual (! Int . End?))))))))))))))))))))))))))

eq22a : T22a -> T22b
eq22a x = x
eq22b : T22b -> T22a
eq22b x = x

{-# BENCHMARK "22/47" T22a T22b #-}

type T23a = (dual (! (String -o (() -o (? (forall (xp:SL). (Char -> String)) . (! String . (! Ceuw . End?))))) . (? Gilv . (dual (? (Char -> String) . (! ((? Int . (? String . (dual (! Beqw . (? Int . End!))))) -o (dual (! String . (! () . End!)))) . (? Ceuw . (! Gilv . (dual (? Ceuw . End!))))))))))
type T23b = (? (String -o (() -o (? (forall (zj:SL). (Char -> String)) . (dual (? String . (? Ceuw . (dual End?))))))) . (! Gilv . (dual (! (Char -> String) . (dual (! ((? Int . (? String . (? Beqw . (dual (? Int . End!))))) -o (? String . (? () . (dual End!)))) . (? Ceuw . (dual (? Gilv . (dual (! Ceuw . (dual End!))))))))))))

eq23a : T23a -> T23b
eq23a x = x
eq23b : T23b -> T23a
eq23b x = x

{-# BENCHMARK "23/49" T23a T23b #-}

type T24a = (! Beqw . (! Beqw . (? ((! (! Int . (? (forall (yx:TL). String) . End!)) . End?) -> ()) . (! Ceuw . (dual (? Ceuw . (? Int . (dual (? (() -> Int) . (! Gilv . (? () . (? (Int -o String) . (? Int . (? Ceuw . (! ((dual (! Char . (! Gilv . End?))) -o Char) . End?)))))))))))))))
type T24b = (! Beqw . (dual (? Beqw . (dual (? ((! (! Int . (dual (! (forall (yh:TL). String) . (dual End!)))) . (dual (dual End?))) -> ()) . (dual (? Ceuw . (dual (! Ceuw . (! Int . (dual (! (() -> Int) . (dual (! Gilv . (? () . (? (Int -o String) . (? Int . (dual (! Ceuw . (dual (! ((? Char . (? Gilv . (dual End?))) -o Char) . End?)))))))))))))))))))))

eq24a : T24a -> T24b
eq24a x = x
eq24b : T24b -> T24a
eq24b x = x

{-# BENCHMARK "24/49" T24a T24b #-}

type T25a = (dual (! Gilv . (dual (! Ceuw . (! (forall (xi:TU). (! Beqw . (? () . (? Int . (! Gilv . (dual (! (() -> Char) . (? Int . (? Beqw . (! Ceuw . (? (forall (xf:TU). (! xi . (? () . (! Ceuw . End!)))) . (! String . (? Gilv . End?))))))))))))) . (! Char . (! (String -o Char) . (? Beqw . End?))))))))
type T25b = (? Gilv . (dual (? Ceuw . (? (forall (xj:TU). (! Beqw . (? () . (? Int . (! Gilv . (dual (! (() -> Char) . (dual (! Int . (dual (? Beqw . (! Ceuw . (? (forall (xd:TU). (! xj . (dual (! () . (dual (! Ceuw . (dual (dual End!)))))))) . (dual (? String . (! Gilv . (dual End?))))))))))))))))) . (? Char . (? (String -o Char) . (dual (? Beqw . (dual (dual End?))))))))))

eq25a : T25a -> T25b
eq25a x = x
eq25b : T25b -> T25a
eq25b x = x

{-# BENCHMARK "25/50" T25a T25b #-}

type T26a = (? (String -> Char) . (! () . (! Beqw . (! Ceuw . (dual (? ((Char -o (() -o Int)) -o (? Beqw . (! Beqw . (dual (? (() -o Int) . End?))))) . (! (Int -o ()) . (? (() -o Char) . (? (? Ceuw . (! Beqw . End!)) . (? Char . (? (() -> String) . (! Gilv . End?))))))))))))
type T26b = (? (String -> Char) . (dual (? () . (dual (! Beqw . (dual (? Ceuw . (dual (! ((Char -o (() -o Int)) -o (? Beqw . (dual (? Beqw . (? (() -o Int) . (dual (dual End?))))))) . (dual (! (Int -o ()) . (dual (! (() -o Char) . (! (? Ceuw . (dual (? Beqw . (dual End!)))) . (! Char . (dual (? (() -> String) . (! Gilv . (dual (dual End?))))))))))))))))))))

eq26a : T26a -> T26b
eq26a x = x
eq26b : T26b -> T26a
eq26b x = x

{-# BENCHMARK "26/51" T26a T26b #-}

type T27a = (? Int . (! (dual (? ((! Ceuw . (! Ceuw . (! (! Int . (? (forall (yn:TU). String) . End!)) . End?))) -> (forall (ym:TU). (String -o Int))) . End!)) . (dual (! (? Char . (dual (? Int . (! (? ((forall (zi:TU). Int) -o String) . (? Gilv . End?)) . End!)))) . (dual (! (dual (! ((forall (zf:TU). (Int -o Int)) -o Char) . End!)) . (! Beqw . End!)))))))
type T27b = (? Int . (! (! ((! Ceuw . (dual (? Ceuw . (? (! Int . (? (forall (xz:TU). String) . End!)) . (dual End?))))) -> (forall (yp:TU). (String -o Int))) . (dual End!)) . (dual (! (? Char . (! Int . (dual (! (? ((forall (zp:TU). Int) -o String) . (? Gilv . End?)) . (dual (dual End!)))))) . (dual (! (? ((forall (zu:TU). (Int -o Int)) -o Char) . (dual End!)) . (! Beqw . End!)))))))

eq27a : T27a -> T27b
eq27a x = x
eq27b : T27b -> T27a
eq27b x = x

{-# BENCHMARK "27/54" T27a T27b #-}

type T28a = (dual (? (((! Beqw . (? Int . (! Char . (? String . End?)))) -o String) -> ((? (forall (ym:SL). (? Gilv . End?)) . (! Gilv . (? Gilv . (! (Char -> ()) . (? () . (dual (! Beqw . (! Int . (dual (! ((forall (xt:TL). (((forall (zy:SL). xt) -o ()) -o ())) -o String) . (dual (! (Char -> (String -> String)) . End?)))))))))))) -> (String -o Char))) . End!))
type T28b = (! (((! Beqw . (dual (! Int . (? Char . (dual (? String . (dual (dual End?)))))))) -o String) -> ((? (forall (zf:SL). (? Gilv . (dual (dual End?)))) . (! Gilv . (? Gilv . (! (Char -> ()) . (dual (! () . (dual (? Beqw . (dual (! Int . (dual (! ((forall (yp:TL). (((forall (yb:SL). yp) -o ()) -o ())) -o String) . (dual (! (Char -> (String -> String)) . End?)))))))))))))) -> (String -o Char))) . (dual End!))

eq28a : T28a -> T28b
eq28a x = x
eq28b : T28b -> T28a
eq28b x = x

{-# BENCHMARK "28/58" T28a T28b #-}

type T29a = (? Beqw . (? String . (! (forall (zq:SL). (? zq . (dual (! Char . (! Ceuw . (? String . (? Gilv . (! (dual (? Gilv . zq)) . (! String . (! Int . (dual (? (forall (xp:TU). Int) . End!)))))))))))) . (! (! (? Ceuw . (dual (! String . (? Ceuw . End!)))) . End?) . (dual (! (? Ceuw . (? Beqw . (! (String -> Char) . (dual (! (String -> String) . End!))))) . End?))))))
type T29b = (? Beqw . (dual (! String . (dual (! (forall (yr:SL). (? yr . (dual (! Char . (dual (? Ceuw . (! String . (dual (? Gilv . (dual (? (! Gilv . (dual yr)) . (? String . (? Int . (? (forall (xj:TU). Int) . (dual (dual End!)))))))))))))))) . (! (! (? Ceuw . (? String . (dual (? Ceuw . (dual (dual End!)))))) . (dual (dual End?))) . (dual (! (? Ceuw . (dual (! Beqw . (dual (! (String -> Char) . (dual (! (String -> String) . (dual (dual End!))))))))) . End?))))))))

eq29a : T29a -> T29b
eq29a x = x
eq29b : T29b -> T29a
eq29b x = x

{-# BENCHMARK "29/59" T29a T29b #-}

type T30a = (dual (! Ceuw . (? (dual (! () . (? Beqw . End!))) . (? Char . (? (forall (zv:TU). (zv -> (! (forall (xj:TL). xj) . End?))) . (! Beqw . (dual (? (forall (xy:TL). (? String . (! () . End!))) . (dual (! (forall (xn:TL). (Char -o String)) . (? Beqw . (! Gilv . (? Char . (? String . (dual (! (() -o (Char -> String)) . (! Beqw . (! (Char -o Int) . (? Ceuw . End?)))))))))))))))))))
type T30b = (? Ceuw . (dual (? (? () . (dual (? Beqw . (dual (dual End!))))) . (? Char . (? (forall (yn:TU). (yn -> (! (forall (xc:TL). xc) . (dual (dual End?))))) . (dual (? Beqw . (? (forall (yg:TL). (? String . (dual (? () . (dual End!))))) . (dual (! (forall (yl:TL). (Char -o String)) . (? Beqw . (dual (? Gilv . (dual (? Char . (? String . (dual (! (() -o (Char -> String)) . (! Beqw . (! (Char -o Int) . (? Ceuw . (dual (dual End?)))))))))))))))))))))))

eq30a : T30a -> T30b
eq30a x = x
eq30b : T30b -> T30a
eq30b x = x

{-# BENCHMARK "30/60" T30a T30b #-}

type T31a = (dual (? Int . (dual (? ((forall (xl:TU). ((forall (xn:SL). (xn -o ((Char -o Char) -o (xl -> xl)))) -> ())) -o (dual (? Ceuw . (? Int . End?)))) . (? (forall (zb:TL). (? () . (dual (? Beqw . (! Beqw . (? Ceuw . (? String . (dual (! Gilv . (? Gilv . (! Beqw . (? () . (! (forall (zn:TL). zb) . (! String . (dual (? Ceuw . (? Gilv . (! Ceuw . End!)))))))))))))))))) . End?)))))
type T31b = (! Int . (dual (! ((forall (xn:TU). ((forall (zn:SL). (zn -o ((Char -o Char) -o (xn -> xn)))) -> ())) -o (! Ceuw . (dual (? Int . (dual (dual End?)))))) . (! (forall (yo:TL). (? () . (! Beqw . (dual (! Beqw . (? Ceuw . (dual (! String . (dual (? Gilv . (! Gilv . (dual (! Beqw . (dual (! () . (? (forall (zm:TL). yo) . (? String . (? Ceuw . (? Gilv . (dual (? Ceuw . (dual End!)))))))))))))))))))))) . (dual End?)))))

eq31a : T31a -> T31b
eq31a x = x
eq31b : T31b -> T31a
eq31b x = x

{-# BENCHMARK "31/61" T31a T31b #-}

type T32a = (! () . (dual (! (! Beqw . End?) . (? Ceuw . (? Gilv . (! Ceuw . (! Char . (dual (? (() -> Int) . (? Int . (! Beqw . (dual (? (! Beqw . (! String . (dual (? Ceuw . (! Beqw . (dual (? (Int -> (forall (zj:TL). Int)) . (dual (! (? Beqw . (! (String -o String) . End?)) . End!))))))))) . (? (? (Int -> ()) . (? Char . End?)) . (! Beqw . (! Int . (! () . (! Int . (! Int . End?)))))))))))))))))))
type T32b = (! () . (? (! Beqw . End?) . (! Ceuw . (! Gilv . (dual (! Ceuw . (! Char . (! (() -> Int) . (dual (? Int . (dual (? Beqw . (dual (! (! Beqw . (! String . (dual (? Ceuw . (dual (? Beqw . (dual (! (Int -> (forall (xn:TL). Int)) . (! (? Beqw . (dual (? (String -o String) . (dual End?)))) . End!))))))))) . (! (? (Int -> ()) . (dual (! Char . (dual End?)))) . (dual (! Beqw . (! Int . (dual (? () . (dual (! Int . (! Int . (dual (dual End?)))))))))))))))))))))))))

eq32a : T32a -> T32b
eq32a x = x
eq32b : T32b -> T32a
eq32b x = x

{-# BENCHMARK "32/70" T32a T32b #-}

type T33a = (? String . (! Beqw . (? (! Gilv . (? Gilv . (! String . End?))) . (! Int . (? Int . (! Gilv . (? Gilv . (? (forall (zb:TL). (forall (zc:TL). (! () . (! (forall (xm:SL). (forall (xt:SL). ((forall (xf:TL). xm) -> xm))) . (dual (? Int . End?)))))) . (? Int . (? Beqw . (? Char . (! Int . (! () . (! (? Gilv . (! (((? Gilv . (! String . End?)) -> Char) -> Int) . (? String . (! Int . End!)))) . (dual (? (? Int . (dual (? Gilv . (dual (! Char . End?))))) . (? ((forall (yf:TL). (forall (zl:TU). Char)) -o Int) . End?)))))))))))))))))
type T33b = (? String . (! Beqw . (dual (! (! Gilv . (dual (! Gilv . (dual (! String . (dual (dual End?))))))) . (? Int . (! Int . (? Gilv . (! Gilv . (! (forall (xv:TL). (forall (yu:TL). (! () . (! (forall (yp:SL). (forall (xa:SL). ((forall (xs:TL). yp) -> yp))) . (! Int . (dual End?)))))) . (! Int . (! Beqw . (! Char . (dual (! Int . (! () . (dual (? (? Gilv . (dual (? (((? Gilv . (dual (? String . (dual End?)))) -> Char) -> Int) . (dual (? String . (! Int . (dual (dual End!)))))))) . (? (? Int . (dual (? Gilv . (dual (! Char . End?))))) . (? ((forall (yv:TL). (forall (xl:TU). Char)) -o Int) . (dual (dual End?)))))))))))))))))))))

eq33a : T33a -> T33b
eq33a x = x
eq33b : T33b -> T33a
eq33b x = x

{-# BENCHMARK "33/82" T33a T33b #-}

type T34a = (? Ceuw . (! Ceuw . (? Beqw . (dual (? (? Ceuw . (! (Char -o String) . End?)) . (dual (! (Char -> Char) . (dual (! Int . (? Gilv . (! Gilv . (dual (! (dual (? () . (! Ceuw . (dual (? (! (! (dual (? Int . End?)) . End!) . End?) . End!))))) . (? Gilv . (? (forall (zy:TU). (! Beqw . (! Int . (! (? String . (! Gilv . (dual (? (Char -> zy) . End!)))) . End!)))) . (! String . (? Ceuw . (! Beqw . (! (() -o String) . (? String . (? Char . (! String . (? () . End?)))))))))))))))))))))))
type T34b = (? Ceuw . (! Ceuw . (? Beqw . (dual (? (? Ceuw . (dual (? (Char -o String) . (dual End?)))) . (? (Char -> Char) . (dual (? Int . (dual (? Gilv . (dual (? Gilv . (! (! () . (? Ceuw . (? (! (! (! Int . (dual End?)) . End!) . (dual (dual End?))) . (dual (dual End!))))) . (dual (! Gilv . (! (forall (xz:TU). (! Beqw . (dual (? Int . (? (? String . (dual (? Gilv . (dual (! (Char -> xz) . (dual End!)))))) . (dual End!)))))) . (? String . (! Ceuw . (dual (! Beqw . (dual (? (() -o String) . (dual (? String . (dual (! Char . (? String . (dual (? () . End?)))))))))))))))))))))))))))))

eq34a : T34a -> T34b
eq34a x = x
eq34b : T34b -> T34a
eq34b x = x

{-# BENCHMARK "34/84" T34a T34b #-}

type T35a = (! Gilv . (? Gilv . (? Int . (? Gilv . (? Char . (? Char . (! Int . (! (! (forall (zq:TU). Int) . End?) . (? (! Char . (dual (! Int . End!))) . (! ((String -o Int) -o String) . (! Char . (! Gilv . (dual (? Beqw . (! String . (! Ceuw . (dual (? (() -o ()) . (? () . (? (dual (! (? Char . (! (Char -> String) . (! () . (! Gilv . End!)))) . End!)) . (! String . (? Int . (? Int . (! Char . (! String . (? Beqw . (dual (? () . (? Ceuw . (? Int . (? Char . End?)))))))))))))))))))))))))))))))
type T35b = (! Gilv . (? Gilv . (? Int . (dual (! Gilv . (dual (? Char . (dual (! Char . (? Int . (dual (! (! (forall (zs:TU). Int) . (dual (dual End?))) . (dual (! (! Char . (dual (! Int . End!))) . (? ((String -o Int) -o String) . (dual (! Char . (! Gilv . (! Beqw . (? String . (dual (! Ceuw . (! (() -o ()) . (! () . (! (? (? Char . (dual (? (Char -> String) . (dual (! () . (dual (? Gilv . (dual End!)))))))) . (dual End!)) . (dual (! String . (? Int . (? Int . (! Char . (dual (? String . (dual (? Beqw . (dual (? () . (? Ceuw . (dual (! Int . (! Char . (dual End?)))))))))))))))))))))))))))))))))))))))))

eq35a : T35a -> T35b
eq35a x = x
eq35b : T35b -> T35a
eq35b x = x

{-# BENCHMARK "35/87" T35a T35b #-}

type T36a = (? Char . (dual (? Char . (? Int . (! Gilv . (! Beqw . (? Ceuw . (dual (! () . (? (! Int . (! (! (Char -o String) . (? Beqw . End?)) . End!)) . (? Ceuw . (? () . (! Ceuw . (? (? Ceuw . (dual (! Int . End?))) . (? () . (dual (? Gilv . (? String . (! Ceuw . (! (() -o Int) . (? () . (! Gilv . (dual (! (! (forall (zb:SL). zb) . End?) . (? String . (! Char . (! Gilv . (! Ceuw . (dual (? Beqw . (dual (! Ceuw . (? Beqw . (! () . (? Ceuw . (? Char . End?))))))))))))))))))))))))))))))))))))
type T36b = (? Char . (! Char . (dual (? Int . (! Gilv . (! Beqw . (? Ceuw . (dual (! () . (dual (! (! Int . (! (! (Char -o String) . (? Beqw . End?)) . End!)) . (dual (? Ceuw . (dual (! () . (dual (! Ceuw . (? (? Ceuw . (dual (! Int . End?))) . (? () . (dual (? Gilv . (? String . (dual (? Ceuw . (? (() -o Int) . (dual (? () . (! Gilv . (? (! (forall (xh:SL). xh) . (dual (dual End?))) . (! String . (? Char . (? Gilv . (dual (! Ceuw . (dual (? Beqw . (dual (! Ceuw . (dual (! Beqw . (? () . (! Ceuw . (! Char . (dual End?))))))))))))))))))))))))))))))))))))))))))))

eq36a : T36a -> T36b
eq36a x = x
eq36b : T36b -> T36a
eq36b x = x

{-# BENCHMARK "36/87" T36a T36b #-}
